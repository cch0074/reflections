What happens when you initialize a repository? Why do you need to do it?

	A .git folder will be created. This is used to create some metadata 
	about the repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	A staging area saves files in working directory that are waiting for next
	commit. It serves as a buffer, not to let all files in the working directory
	be committed at a time.

How can you use the staging area to make sure you have one commit per logical
change?

	Only "add" those files you want to commit (for a particular logical change)
	to the staging area, so that other unrelated but changed files won't be
	committed.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	When there are some features that you want to add but you don't want to keep
	them into the final (i.e. master) branch yet. Branching allows you to "branch"
	into several paths and merge whenever you like.

How do the diagrams help you visualize the branch structure?

	Diagrams visualize different branches and which commits are on which branch.
	Also it shows if there is any "detached" commit which may never be visited 
	again.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	Things appeared before branching will be kept;
	Things added in branches will be added;
	Things appeared before branching, but deleted in any branch will be deleted.
	Representing in diagram can visualize the merging process and have a careful
	observation of the branching and merging processes.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

	Pros: More efficient to combine two versions if they're compatible
	Cons: Sometimes may miss some codes that are deleted in one branch
